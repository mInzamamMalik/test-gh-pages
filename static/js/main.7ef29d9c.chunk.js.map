{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","num1","setNum1","theme","room","data","setData","className","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAuCeA,MAnCf,WAAgB,IAAD,EAESC,IAAMC,SAAS,GAFxB,mBAERC,EAFQ,KAEFC,EAFE,OAGSH,IAAMC,SAAS,CAAEG,MAAO,OAAQC,KAAM,IAH/C,mBAGRC,EAHQ,KAGFC,EAHE,KAsBb,OACE,sBAAKC,UAAU,MAAf,UACE,mCAAMN,EAAN,QACA,mCAAOA,EAAO,IAAM,EAAK,cAAgB,aAAzC,QACA,wBAAQO,QArBA,WACVN,EAAQD,EAAO,GACfQ,QAAQC,IAAIT,IAmBV,iBACA,uBACA,wBAAQO,QAlBQ,WACC,SAAfH,EAAKF,MAEPG,EAAQ,2BAAKD,GAAN,IAAYF,MAAO,WAG1BG,EAAQ,2BAAKD,GAAN,IAAYF,MAAO,UAG5BM,QAAQC,IAAIL,IASV,2BACA,yCAAYA,EAAKF,SACjB,wCAAWE,EAAKD,YCtBPO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ef29d9c.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\n\nfunction App() {\n\n  let [num1, setNum1] = React.useState(0);\n  let [data, setData] = React.useState({ theme: \"Dark\", room: 5 });\n\n  const add = () => {\n    setNum1(num1 + 1)\n    console.log(num1);\n  }\n\n  const changeTheme = () => {\n    if (data.theme === \"Dark\") {\n\n      setData({ ...data, theme: \"Light\" })\n\n    } else {\n      setData({ ...data, theme: \"Dark\" })\n\n    }\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1> {num1}  </h1>\n      <h1> {(num1 % 2 === 0) ? \"even number\" : \"odd number\"}  </h1>\n      <button onClick={add} >Add</button>\n      <br />\n      <button onClick={changeTheme} >Change Theme </button>\n      <h3>Theme: {data.theme}</h3>\n      <h3>Room: {data.room}</h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}